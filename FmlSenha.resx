<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAaBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgDAAAAa6xYVAAAANJQ
        TFRF7jM4821x96Ci8E1R7jk9+sPE/////efo8E5T8EZL+sDB+snK96Gk/eXm8EVK/N3d+9HT7z5D/N3e
        /NbX70FF/NfY/N7f70FG8ElO/eLj/NjZ8EpP/ePk70JH/Nna8EtP/eTk70NI7zo/+sjJ+83P7zxB7z1B
        7jg9+sLE+87P+sHD+sHC+8/Q7jc8+r/B7z1C+r7A7jU6+bm6+9DR+bi6+be5+ba4+9HS+bW370VJ+bW2
        /Nzd+bS29YqN/Nvc70RI/Nrb/NXW70BE+9XW952g83R3zII1yAAAAAFvck5UAc+id5oAAAL2SURBVHja
        7d3ZUhNRFEbhlklDZJJIVGbERFCM7YwT8/u/ElZ56YVnnz7D3rvXegC6/q+SSkJOkqYhIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIkEP5sKb9wiwsLgU3MNHCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAAC
        CCCAAAIIIICAlVWD5WFwj4fhAitGTlCsroVvWt/wdxtYfSLZ7+9eIN3vTUC+35eAZP/myN9jQdx+PwKx
        +70IxO/3IdBlvweBbvvtC3Tdb11gINj/dOTvldFgS7B/7O+1YZr9dgVS7bcqkG6/TYGU+y0KpN1vT+DZ
        87T7rQlI9r8Yh/1NSwI59lsSyLPfjkCu/VYE8u23IZBzvwWB7az79Qts7wj278ZcQbdA/v26BST793Zj
        r6JXoMx+vQKl9msVKLdfp0DJ/RoFyu7XJ1B6vzaB8vt1CexX2K9JYP+gxn49ArX2axEQ7T9Me20NAjX3
        axCou7++QO391QXmV8IvPzzKAXD0su6xYslN4PiVv7tAbQEVDwM79QR0PBGQvBA4nqS88vS1jqeCtQS0
        7K8loGe/TOBk4m9/DYHpqd1/CaUQ0La/tIC+/WUFpm+svzHQTUDnftlb410EtO6XHY6IF9C7v4zAdFnz
        AQGJwNuJv/35BbTvzy1w9k7/MTHJMWmpgIX9QoGZv/35BKzszyVw9t7OcfEcAu0HSx8YkAh8nPnbL/vI
        ZIiAtf2yD83+X6D9ZG1/WgGL+1MK2NyfTqD9bHN/KgG7+9MItF/s7pcJfJ35299dwPp+2Zeo/SvQfrO+
        v5uAh/1CgQ1/++MFvOxvmvMogfa7l/1xAp72ywT+fqGgr/1/BH7IBNqfvvZLBfztFz4n/BX+FbyLZn6Y
        WHov8BcCCCCAwPnvvgtcIIAAAggggAACCFwi0HeB0SYCCCCAQO8FrhBAAIG+C1wjgAACNwgggEDfBca3
        c8HdNUREREREREREREREREREREREREREREREREQk6B5tuD6wN9WlmAAAAABJRU5ErkJggg==
</value>
  </data>
</root>